{"ast":null,"code":"import { ACCESS_TOKEN, USER_ACTION } from \"../constants\";\nconst initialState = {\n  currentUser: null,\n  users: [],\n  indexedUsers: {},\n  selectedUser: null\n};\n\nconst UserReducer = (state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case USER_ACTION.DELETE_USER:\n      return { ...state,\n        users: state.users.filter(user => user.id !== payload)\n      };\n\n    case USER_ACTION.UPDATE_USER:\n      return { ...state,\n        users: state.users.map(user => {\n          if (user.id === payload.id) {\n            return payload;\n          }\n\n          return user;\n        }),\n        indexedUsers: { ...state.indexedUsers,\n          [payload.id]: payload\n        }\n      };\n\n    case USER_ACTION.GET_USER:\n      return { ...state,\n        selectedUser: payload\n      };\n\n    case USER_ACTION.SELECT_USER:\n      if (!Number.isInteger(payload) || payload < 0 || payload >= state.users.length) {\n        return { ...state,\n          selectedUser: initialState.selectedUser\n        };\n      }\n\n      return { ...state,\n        selectedUser: state.users[payload]\n      };\n\n    case USER_ACTION.DESREGISTER:\n    case USER_ACTION.LOG_OUT:\n      localStorage.removeItem(ACCESS_TOKEN);\n      return { ...state,\n        currentUser: payload\n      };\n\n    case USER_ACTION.UPDATE_SELF:\n    case USER_ACTION.VERIFY_USER:\n    case USER_ACTION.GET_USER_DATA:\n    case USER_ACTION.SIGN_IN:\n      return { ...state,\n        currentUser: payload\n      };\n\n    case USER_ACTION.GET_USERS:\n      const newIndexedUsers = {};\n      payload.forEach(user => {\n        newIndexedUsers[user.id] = user;\n      });\n      return { ...state,\n        users: payload,\n        indexedUsers: newIndexedUsers\n      };\n\n    case USER_ACTION.ADD_USER:\n      return { ...state,\n        users: [...state.users, payload],\n        indexedUsers: { ...state.indexedUsers,\n          [payload.id]: payload\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = UserReducer;\nexport default UserReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserReducer\");","map":{"version":3,"sources":["/Users/camilarendic/Desktop/Capstone/Repositorios/2021-2-S3-Grupo3-Web/src/reducers/UserReducer.js"],"names":["ACCESS_TOKEN","USER_ACTION","initialState","currentUser","users","indexedUsers","selectedUser","UserReducer","state","action","type","payload","DELETE_USER","filter","user","id","UPDATE_USER","map","GET_USER","SELECT_USER","Number","isInteger","length","DESREGISTER","LOG_OUT","localStorage","removeItem","UPDATE_SELF","VERIFY_USER","GET_USER_DATA","SIGN_IN","GET_USERS","newIndexedUsers","forEach","ADD_USER"],"mappings":"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","sourcesContent":["import { ACCESS_TOKEN, USER_ACTION } from \"../constants\";\n\nconst initialState = {\n    currentUser: null,\n    users: [],\n    indexedUsers: {},\n    selectedUser: null\n};\n\nconst UserReducer = (state = initialState, action) => {\n    const {type, payload} = action;\n    \n    switch (type) {\n        case USER_ACTION.DELETE_USER:\n            return {\n                ...state,\n                users: state.users.filter(user=> user.id !== payload)\n            }\n\n        case USER_ACTION.UPDATE_USER:\n            return {\n                ...state,\n                users: state.users.map(user=>{\n                    if (user.id === payload.id) {\n                        return payload;\n                    }\n                    return user;\n                }),\n                indexedUsers: {...state.indexedUsers, [payload.id]: payload}\n            }\n\n        case USER_ACTION.GET_USER:\n            return {...state, selectedUser: payload};\n        \n        case USER_ACTION.SELECT_USER:\n            if (!Number.isInteger(payload) || payload < 0 || payload >= state.users.length) {\n                return {...state, selectedUser: initialState.selectedUser};\n            }\n            return {...state, selectedUser: state.users[payload]};\n\n        case USER_ACTION.DESREGISTER:\n        case USER_ACTION.LOG_OUT:\n            localStorage.removeItem(ACCESS_TOKEN);\n            return {...state, currentUser: payload};\n\n        case USER_ACTION.UPDATE_SELF:\n        case USER_ACTION.VERIFY_USER:\n        case USER_ACTION.GET_USER_DATA:\n        case USER_ACTION.SIGN_IN:\n            return {...state, currentUser: payload};\n\n        case USER_ACTION.GET_USERS:\n            const newIndexedUsers = {};\n            payload.forEach(user => {\n                newIndexedUsers[user.id] = user;\n            });\n            return {\n                ...state, \n                users: payload,\n                indexedUsers: newIndexedUsers\n            };\n\n        case USER_ACTION.ADD_USER:\n            return {\n                ...state, \n                users: [...state.users, payload],\n                indexedUsers: {...state.indexedUsers, [payload.id]: payload}\n            };\n\n        default:\n            return state;\n    }\n}\n\nexport default UserReducer;"]},"metadata":{},"sourceType":"module"}