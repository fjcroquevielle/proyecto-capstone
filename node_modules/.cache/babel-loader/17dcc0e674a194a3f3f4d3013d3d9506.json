{"ast":null,"code":"var _jsxFileName = \"/Users/camilarendic/Desktop/Capstone/Repositorios/2021-2-S3-Grupo3-Web/src/routes/MyPage.js\";\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setDesregisterModal, setSelected } from \"../actions\";\nimport { Button, MyInfo, UpdateInfoForm } from \"../components\";\nimport { DesregisterConfirmModalModal } from \"../components\";\nimport \"./styles/Redico.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  update: false\n};\n\nclass MyPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n    this.renderContent = this.renderContent.bind(this);\n    this.toggleUpdate = this.toggleUpdate.bind(this);\n    this.setUpdateFalse = this.setUpdateFalse.bind(this);\n    this.setDesregisterModal = this.setDesregisterModal.bind(this);\n  }\n\n  renderContent() {\n    if (this.state.update) {\n      return /*#__PURE__*/_jsxDEV(UpdateInfoForm, {\n        onSuccess: this.setUpdateFalse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(MyInfo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  }\n\n  setUpdateFalse() {\n    this.setState({ ...this.state,\n      update: false\n    });\n  }\n\n  toggleUpdate() {\n    this.setState({ ...this.state,\n      update: !this.state.update\n    });\n  }\n\n  setDesregisterModal() {\n    this.props.dispatch(setDesregisterModal(true));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      selected: \"Settings\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"redico-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"My Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"redico-header-right-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.setDesregisterModal,\n            children: \"Desregister\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.toggleUpdate,\n            children: this.state.update ? 'Return' : 'Edit Info'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), this.renderContent(), /*#__PURE__*/_jsxDEV(DesregisterConfirmModalModal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst ConnectedMyPage = connect(null)(MyPage);\nexport { ConnectedMyPage as MyPage };","map":{"version":3,"sources":["/Users/camilarendic/Desktop/Capstone/Repositorios/2021-2-S3-Grupo3-Web/src/routes/MyPage.js"],"names":["Component","connect","setDesregisterModal","setSelected","Button","MyInfo","UpdateInfoForm","DesregisterConfirmModalModal","initialState","update","MyPage","constructor","props","state","renderContent","bind","toggleUpdate","setUpdateFalse","setState","dispatch","render","ConnectedMyPage"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,mBAAT,EAA8BC,WAA9B,QAAiD,YAAjD;AAEA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,cAAzB,QAA+C,eAA/C;AACA,SAASC,4BAAT,QAA6C,eAA7C;AAEA,OAAO,qBAAP;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE;AADS,CAArB;;AAIA,MAAMC,MAAN,SAAqBV,SAArB,CAA8B;AAC1BW,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAaL,YAAb;AAEA,SAAKM,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,cAAL,GAAsB,KAAKA,cAAL,CAAoBF,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKb,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBa,IAAzB,CAA8B,IAA9B,CAA3B;AACH;;AAEDD,EAAAA,aAAa,GAAG;AACZ,QAAI,KAAKD,KAAL,CAAWJ,MAAf,EAAuB;AACnB,0BAAO,QAAC,cAAD;AAAgB,QAAA,SAAS,EAAE,KAAKQ;AAAhC;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AACD,wBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAEDA,EAAAA,cAAc,GAAE;AACZ,SAAKC,QAAL,CAAc,EAAC,GAAG,KAAKL,KAAT;AAAgBJ,MAAAA,MAAM,EAAE;AAAxB,KAAd;AACH;;AAEDO,EAAAA,YAAY,GAAE;AACV,SAAKE,QAAL,CAAc,EAAC,GAAG,KAAKL,KAAT;AAAgBJ,MAAAA,MAAM,EAAE,CAAC,KAAKI,KAAL,CAAWJ;AAApC,KAAd;AACH;;AAEDP,EAAAA,mBAAmB,GAAE;AACjB,SAAKU,KAAL,CAAWO,QAAX,CAAoBjB,mBAAmB,CAAC,IAAD,CAAvC;AACH;;AAEDkB,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,QAAQ,EAAC,UAAvC;AAAA,8BAEQ;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAC,6BAAf;AAAA,kCACI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,KAAKlB,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,KAAKc,YAAtB;AAAA,sBACK,KAAKH,KAAL,CAAWJ,MAAX,GAAkB,QAAlB,GAA2B;AADhC;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFR,eAeQ;AAAA;AAAA;AAAA;AAAA,cAfR,eAgBQ;AAAA;AAAA;AAAA;AAAA,cAhBR,EAiBS,KAAKK,aAAL,EAjBT,eAkBQ,QAAC,4BAAD;AAAA;AAAA;AAAA;AAAA,cAlBR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAsBH;;AArDyB;;AAwD9B,MAAMO,eAAe,GAAGpB,OAAO,CAAC,IAAD,CAAP,CAAcS,MAAd,CAAxB;AAEA,SAAQW,eAAe,IAAIX,MAA3B","sourcesContent":["import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setDesregisterModal, setSelected } from \"../actions\";\n\nimport { Button, MyInfo, UpdateInfoForm } from \"../components\";\nimport { DesregisterConfirmModalModal } from \"../components\";\n\nimport \"./styles/Redico.css\";\n\nconst initialState = {\n    update: false\n}\n\nclass MyPage extends Component{\n    constructor(props){\n        super(props);\n        this.state = initialState;\n\n        this.renderContent = this.renderContent.bind(this);\n        this.toggleUpdate = this.toggleUpdate.bind(this);\n        this.setUpdateFalse = this.setUpdateFalse.bind(this);\n        this.setDesregisterModal = this.setDesregisterModal.bind(this);\n    }\n\n    renderContent() {\n        if (this.state.update) {\n            return(<UpdateInfoForm onSuccess={this.setUpdateFalse}/>);\n        }\n        return(<MyInfo/>);\n    }\n\n    setUpdateFalse(){\n        this.setState({...this.state, update: false});\n    }\n\n    toggleUpdate(){\n        this.setState({...this.state, update: !this.state.update});\n    }\n\n    setDesregisterModal(){\n        this.props.dispatch(setDesregisterModal(true));\n    }\n\n    render(){\n        return(\n            <div className='main-content' selected='Settings'>\n\n                    <div className='redico-header'>\n                        <h2>\n                            My Account\n                        </h2>\n                        <div className='redico-header-right-buttons'>\n                            <Button onClick={this.setDesregisterModal}>\n                                Desregister\n                            </Button>\n                            <Button onClick={this.toggleUpdate}>\n                                {this.state.update?'Return':'Edit Info'}\n                            </Button>\n                        </div>\n                    </div>\n                    <br/>\n                    <br/>\n                    {this.renderContent()}\n                    <DesregisterConfirmModalModal/>\n            </div>\n        )\n    }\n}\n\nconst ConnectedMyPage = connect(null)(MyPage);\n\nexport {ConnectedMyPage as MyPage};"]},"metadata":{},"sourceType":"module"}