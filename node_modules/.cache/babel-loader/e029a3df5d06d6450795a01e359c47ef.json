{"ast":null,"code":"import { USER_ACTION } from \"../constants\";\nimport { UsersService } from '../services';\nexport const signup = signupData => async dispatch => {\n  try {\n    const user = await UsersService.signup(signupData);\n    dispatch({\n      type: USER_ACTION.SIGN_UP,\n      payload: user\n    });\n  } catch (error) {\n    throw error;\n  }\n};\nexport const signin = signinData => async dispatch => {\n  try {\n    const user = await UsersService.signin(signinData);\n    dispatch({\n      type: USER_ACTION.SIGN_IN,\n      payload: user\n    });\n  } catch (error) {\n    throw error;\n  }\n};\nexport const logout = () => async dispatch => {\n  dispatch({\n    type: USER_ACTION.LOG_OUT,\n    payload: null\n  });\n};\nexport const getUsers = () => async dispatch => {\n  try {\n    const users = await UsersService.getUsers();\n    console.log(users);\n    dispatch({\n      type: USER_ACTION.GET_USERS,\n      payload: users\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getUserData = () => async dispatch => {\n  try {\n    const user = await UsersService.getUserData();\n    dispatch({\n      type: USER_ACTION.GET_USER_DATA,\n      payload: user\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_ACTION.LOG_OUT,\n      payload: null\n    });\n    console.error(error.message);\n    throw error;\n  }\n};\nexport const addUser = (userData, isMaintainer) => async dispatch => {\n  try {\n    const user = await UsersService.addUser(userData, isMaintainer);\n\n    if (!user) {\n      throw new Error(\"user not created.\");\n    }\n\n    dispatch({\n      type: USER_ACTION.ADD_USER,\n      payload: user\n    });\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\nexport const verifyUser = userData => async dispatch => {\n  try {\n    const verifiedUser = await UsersService.verifyUser(userData);\n\n    if (!verifiedUser) {\n      throw new Error(\"user not verified\");\n    }\n\n    dispatch({\n      type: USER_ACTION.VERIFY_USER,\n      payload: verifiedUser\n    });\n  } catch (error) {\n    throw error;\n  }\n};\nexport const updateSelf = userData => async dispatch => {\n  try {\n    const updatedUser = await UsersService.updateSelf(userData);\n\n    if (!updatedUser) {\n      throw new Error(\"user not updated\");\n    }\n\n    dispatch({\n      type: USER_ACTION.UPDATE_SELF,\n      payload: updatedUser\n    });\n  } catch (error) {\n    throw error;\n  }\n};\nexport const updateUser = (userId, userData) => async dispatch => {\n  try {\n    const updatedUser = await UsersService.updateUser(userId, userData);\n\n    if (!updatedUser) {\n      throw new Error(`user ${userId} not updated`);\n    }\n\n    dispatch({\n      type: USER_ACTION.UPDATE_USER,\n      payload: updatedUser\n    });\n  } catch (error) {\n    throw error;\n  }\n};\nexport const getUser = userId => async dispatch => {\n  try {\n    const user = await UsersService.getUser(userId);\n\n    if (!user) {\n      throw new Error(`user ${userId} not found`);\n    }\n\n    dispatch({\n      type: USER_ACTION.GET_USER,\n      payload: user\n    });\n  } catch (error) {\n    throw error;\n  }\n};\nexport const deleteUser = userId => async dispatch => {\n  try {\n    await UsersService.deleteUser(userId); // if(!deletedUser){\n    //     throw new Error(`user ${userId} not deleted`);\n    // }\n\n    dispatch({\n      type: USER_ACTION.DELETE_USER,\n      payload: userId\n    });\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\nexport const desregister = () => async dispatch => {\n  try {\n    await UsersService.desregisterUser();\n    dispatch({\n      type: USER_ACTION.DESREGISTER,\n      payload: true\n    });\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\nexport const selectUser = userIndex => async dispatch => {\n  try {\n    dispatch({\n      type: USER_ACTION.SELECT_USER,\n      payload: userIndex\n    });\n  } catch (error) {\n    throw error;\n  }\n};","map":{"version":3,"sources":["/Users/camilarendic/Desktop/Capstone/Repositorios/2021-2-S3-Grupo3-Web/src/actions/UserActions.js"],"names":["USER_ACTION","UsersService","signup","signupData","dispatch","user","type","SIGN_UP","payload","error","signin","signinData","SIGN_IN","logout","LOG_OUT","getUsers","users","console","log","GET_USERS","getUserData","GET_USER_DATA","message","addUser","userData","isMaintainer","Error","ADD_USER","verifyUser","verifiedUser","VERIFY_USER","updateSelf","updatedUser","UPDATE_SELF","updateUser","userId","UPDATE_USER","getUser","GET_USER","deleteUser","DELETE_USER","desregister","desregisterUser","DESREGISTER","selectUser","userIndex","SELECT_USER"],"mappings":"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","sourcesContent":["import { USER_ACTION } from \"../constants\";\nimport { UsersService } from '../services';\n\nexport const signup = (signupData) => async (dispatch) => {\n    try {\n        const user = await UsersService.signup(signupData);\n        dispatch( { \n            type: USER_ACTION.SIGN_UP, \n            payload: user\n        })\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport const signin = (signinData) => async (dispatch) => {\n    try {\n        const user = await UsersService.signin(signinData);\n        dispatch( { \n            type: USER_ACTION.SIGN_IN, \n            payload: user\n        })\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport const logout = () => async (dispatch) => {\n    dispatch({\n        type: USER_ACTION.LOG_OUT,\n        payload: null\n    })\n}\n\nexport const getUsers = () => async (dispatch) => {\n    try {\n        const users = await UsersService.getUsers();\n        console.log(users);\n        dispatch( { \n            type: USER_ACTION.GET_USERS, \n            payload: users\n        })\n        \n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const getUserData = () => async (dispatch) => {\n    try {\n        const user = await UsersService.getUserData();\n        dispatch( { \n            type: USER_ACTION.GET_USER_DATA, \n            payload: user\n        })\n        \n    } catch (error) {\n        dispatch( { \n            type: USER_ACTION.LOG_OUT, \n            payload: null\n        })\n        console.error(error.message);\n        throw error;\n    }\n};\n\nexport const addUser = (userData, isMaintainer) => async (dispatch) => {\n    try {\n        const user = await UsersService.addUser(userData, isMaintainer);\n        if (!user) {\n            throw new Error(\"user not created.\");\n        }\n        dispatch( { \n            type: USER_ACTION.ADD_USER, \n            payload: user\n        })\n    } catch (error) {\n        console.log(error);\n        throw error;\n    }\n}\n\nexport const verifyUser = (userData) => async (dispatch) => {\n    try {\n        const verifiedUser = await UsersService.verifyUser(userData);\n        if(!verifiedUser){\n            throw new Error(\"user not verified\");\n        }\n        dispatch({\n            type: USER_ACTION.VERIFY_USER,\n            payload: verifiedUser\n        })\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport const updateSelf = (userData) => async (dispatch) => {\n    try {\n        const updatedUser = await UsersService.updateSelf(userData);\n        if(!updatedUser){\n            throw new Error(\"user not updated\");\n        }\n        dispatch({\n            type: USER_ACTION.UPDATE_SELF,\n            payload: updatedUser\n        })\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport const updateUser = (userId, userData) => async (dispatch) => {\n    try {\n        const updatedUser = await UsersService.updateUser(userId, userData);\n        if(!updatedUser){\n            throw new Error(`user ${userId} not updated`);\n        }\n        dispatch({\n            type: USER_ACTION.UPDATE_USER,\n            payload: updatedUser\n        })\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport const getUser = (userId) => async (dispatch) => {\n    try {\n        const user = await UsersService.getUser(userId);\n        if(!user){\n            throw new Error(`user ${userId} not found`);\n        }\n        dispatch({\n            type: USER_ACTION.GET_USER,\n            payload: user\n        })\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport const deleteUser = (userId) => async (dispatch) => {\n    try {\n        \n        await UsersService.deleteUser(userId);\n        // if(!deletedUser){\n        //     throw new Error(`user ${userId} not deleted`);\n        // }\n        dispatch({\n            type: USER_ACTION.DELETE_USER,\n            payload: userId\n        })\n    } catch (error) {\n        console.error(error);\n        throw error;\n    }\n}\n\nexport const desregister = () => async (dispatch) => {\n    try {\n        await UsersService.desregisterUser();\n        dispatch({\n            type: USER_ACTION.DESREGISTER,\n            payload: true\n        })\n    } catch (error) {\n        console.error(error);\n        throw error;\n    }\n}\n\nexport const selectUser = (userIndex) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_ACTION.SELECT_USER,\n            payload: userIndex\n        })\n    } catch (error) {\n        throw error;\n    }\n}"]},"metadata":{},"sourceType":"module"}