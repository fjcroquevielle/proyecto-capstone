{"ast":null,"code":"var _jsxFileName = \"/Users/camilarendic/Desktop/Capstone/Repositorios/2021-2-S3-Grupo3-Web/src/components/Button.js\";\nimport { Component } from \"react\";\nimport \"./styles/Button.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Button extends Component {\n  // constructor(props){\n  //     super(props)\n  //     this.getClassName = this.getClassName.bind(this);\n  // }\n  getClassName() {\n    return [\"button\", \"non-select\", this.props.className].join(\" \");\n  }\n\n  renderTooltip(tooltip, tooltipPos = \"\") {\n    if (tooltip) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `button-tooltip ${tooltipPos}`,\n        children: tooltip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  render() {\n    var _this$props$tooltipPo;\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: this.getClassName(),\n      onClick: this.props.onClick,\n      children: [this.props.children ? this.props.children : \"Button\", this.renderTooltip(this.props.tooltip, (_this$props$tooltipPo = this.props.tooltipPosition) !== null && _this$props$tooltipPo !== void 0 ? _this$props$tooltipPo : \"\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport { Button };","map":{"version":3,"sources":["/Users/camilarendic/Desktop/Capstone/Repositorios/2021-2-S3-Grupo3-Web/src/components/Button.js"],"names":["Component","Button","getClassName","props","className","join","renderTooltip","tooltip","tooltipPos","render","onClick","children","tooltipPosition"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAO,qBAAP;;;AAEA,MAAMC,MAAN,SAAqBD,SAArB,CAA8B;AAC1B;AACA;AAEA;AACA;AAEAE,EAAAA,YAAY,GAAE;AACV,WAAO,CAAC,QAAD,EAAW,YAAX,EAAyB,KAAKC,KAAL,CAAWC,SAApC,EAA+CC,IAA/C,CAAoD,GAApD,CAAP;AACH;;AAEDC,EAAAA,aAAa,CAACC,OAAD,EAAUC,UAAU,GAAG,EAAvB,EAA2B;AACpC,QAAID,OAAJ,EAAa;AACT,0BACI;AAAM,QAAA,SAAS,EAAG,kBAAkBC,UAAY,EAAhD;AAAA,kBAAoDD;AAApD;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH;AACJ;;AAEDE,EAAAA,MAAM,GAAG;AAAA;;AACL,wBACI;AAAK,MAAA,SAAS,EAAE,KAAKP,YAAL,EAAhB;AAAqC,MAAA,OAAO,EAAE,KAAKC,KAAL,CAAWO,OAAzD;AAAA,iBACK,KAAKP,KAAL,CAAWQ,QAAX,GAAsB,KAAKR,KAAL,CAAWQ,QAAjC,GAA4C,QADjD,EAEK,KAAKL,aAAL,CAAmB,KAAKH,KAAL,CAAWI,OAA9B,2BAAuC,KAAKJ,KAAL,CAAWS,eAAlD,yEAAmE,EAAnE,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AA1ByB;;AA6B9B,SAAQX,MAAR","sourcesContent":["import { Component } from \"react\";\nimport \"./styles/Button.css\";\n\nclass Button extends Component{\n    // constructor(props){\n    //     super(props)\n\n    //     this.getClassName = this.getClassName.bind(this);\n    // }\n\n    getClassName(){\n        return [\"button\", \"non-select\", this.props.className].join(\" \");\n    }\n\n    renderTooltip(tooltip, tooltipPos = \"\") {\n        if (tooltip) {\n            return (\n                <span className={`button-tooltip ${ tooltipPos }`}>{tooltip}</span>\n            );\n        }\n    }\n\n    render() {\n        return(\n            <div className={this.getClassName()} onClick={this.props.onClick}>\n                {this.props.children ? this.props.children : \"Button\"}\n                {this.renderTooltip(this.props.tooltip, this.props.tooltipPosition??\"\")}\n            </div>\n        );\n    }\n}\n\nexport {Button};"]},"metadata":{},"sourceType":"module"}