{"ast":null,"code":"import { ORG_ACTIONS } from \"../constants\";\nimport { OrganizationService } from \"../services\";\nexport const getOrganization = orgId => async dispatch => {\n  try {\n    const organization = await OrganizationService.getOrganization(orgId);\n\n    if (!organization) {\n      throw new Error(\"organization not found.\");\n    }\n\n    dispatch({\n      type: ORG_ACTIONS.GET_ORG,\n      payload: organization\n    });\n  } catch (error) {\n    console.error(error); // throw error;\n  }\n};\nexport const updateOrganization = (orgId, orgData) => async dispatch => {\n  try {\n    const organization = await OrganizationService.updateOrganization(orgId, orgData);\n\n    if (!organization) {\n      throw new Error(\"organization not found.\");\n    }\n\n    dispatch({\n      type: ORG_ACTIONS.UPDATE_ORG,\n      payload: organization\n    });\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};","map":{"version":3,"sources":["/Users/camilarendic/Desktop/Capstone/Repositorios/2021-2-S3-Grupo3-Web/src/actions/OrganizationActions.js"],"names":["ORG_ACTIONS","OrganizationService","getOrganization","orgId","dispatch","organization","Error","type","GET_ORG","payload","error","console","updateOrganization","orgData","UPDATE_ORG"],"mappings":"AAAA,SAASA,WAAT,QAA4B,cAA5B;AACA,SAASC,mBAAT,QAAoC,aAApC;AAEA,OAAO,MAAMC,eAAe,GAAIC,KAAD,IAAW,MAAOC,QAAP,IAAoB;AAC1D,MAAI;AACA,UAAMC,YAAY,GAAG,MAAMJ,mBAAmB,CAACC,eAApB,CAAoCC,KAApC,CAA3B;;AACA,QAAI,CAACE,YAAL,EAAmB;AACf,YAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;AACH;;AACDF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEP,WAAW,CAACQ,OADb;AAELC,MAAAA,OAAO,EAAEJ;AAFJ,KAAD,CAAR;AAIH,GATD,CASE,OAAOK,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd,EADY,CAEZ;AACH;AACJ,CAdM;AAgBP,OAAO,MAAME,kBAAkB,GAAG,CAACT,KAAD,EAAQU,OAAR,KAAoB,MAAOT,QAAP,IAAoB;AACtE,MAAI;AACA,UAAMC,YAAY,GAAG,MAAMJ,mBAAmB,CAACW,kBAApB,CAAuCT,KAAvC,EAA8CU,OAA9C,CAA3B;;AACA,QAAI,CAACR,YAAL,EAAmB;AACf,YAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;AACH;;AACDF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEP,WAAW,CAACc,UADb;AAELL,MAAAA,OAAO,EAAEJ;AAFJ,KAAD,CAAR;AAIH,GATD,CASE,OAAOK,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA,UAAMA,KAAN;AACH;AACJ,CAdM","sourcesContent":["import { ORG_ACTIONS } from \"../constants\";\nimport { OrganizationService } from \"../services\";\n\nexport const getOrganization = (orgId) => async (dispatch) => {\n    try {\n        const organization = await OrganizationService.getOrganization(orgId);\n        if (!organization) {\n            throw new Error(\"organization not found.\")\n        }\n        dispatch({\n            type: ORG_ACTIONS.GET_ORG,\n            payload: organization\n        })\n    } catch (error) {\n        console.error(error);\n        // throw error;\n    }\n}\n\nexport const updateOrganization = (orgId, orgData) => async (dispatch) => {\n    try {\n        const organization = await OrganizationService.updateOrganization(orgId, orgData);\n        if (!organization) {\n            throw new Error(\"organization not found.\")\n        }\n        dispatch({\n            type: ORG_ACTIONS.UPDATE_ORG,\n            payload: organization\n        })\n    } catch (error) {\n        console.error(error);\n        throw error;\n    }\n}"]},"metadata":{},"sourceType":"module"}