{"ast":null,"code":"var _jsxFileName = \"/Users/camilarendic/Desktop/Capstone/Repositorios/2021-2-S3-Grupo3-Web/src/components/modals/DeleteConfirmModal.js\";\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { deleteUser, setDeleteUserModal } from \"../../actions\";\nimport { Button } from \"../Button\";\nimport \"./styles/Modal.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    isVisible: state.ModalReducer.modalDeleteUser,\n    selectedUser: state.UserReducer.selectedUser\n  };\n};\n\nconst initialState = {\n  disabled: false\n};\n\nclass DeleteConfirmModalModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.resetState = this.resetState.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.props.isVisible) {\n      this.setState(initialState);\n    }\n  }\n\n  resetState() {\n    this.setState(initialState);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (this.state.disabled) {\n      return;\n    }\n\n    this.setState({ ...this.state,\n      disabled: true\n    });\n\n    if (this.props.selectedUser) {\n      this.props.dispatch(deleteUser(this.props.selectedUser.id)).then(() => {\n        this.closeModal();\n      }).catch(() => {\n        this.setState({ ...this.state,\n          disabled: false\n        });\n      });\n      return;\n    }\n\n    this.setState({ ...this.state,\n      disabled: false\n    });\n  }\n\n  closeModal() {\n    // this.resetState();\n    // this.props.dispatch(selectUser(-1));\n    this.props.dispatch(setDeleteUserModal(false)).then(this.resetState);\n  }\n\n  render() {\n    var modalState = 'modal ';\n    modalState += this.props.isVisible ? 'modal-open' : 'modal-closed';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: modalState,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-title\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"move-right\",\n          onClick: this.closeModal,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [this.props.selectedUser ? `Are you sure you want to delete user ${this.props.selectedUser.username}?` : \"\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.handleSubmit,\n          children: \"Accept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst connectedDeleteConfirmModalModal = connect(mapStateToProps)(DeleteConfirmModalModal);\nexport { connectedDeleteConfirmModalModal as DeleteConfirmModalModal };","map":{"version":3,"sources":["/Users/camilarendic/Desktop/Capstone/Repositorios/2021-2-S3-Grupo3-Web/src/components/modals/DeleteConfirmModal.js"],"names":["Component","connect","deleteUser","setDeleteUserModal","Button","mapStateToProps","state","isVisible","ModalReducer","modalDeleteUser","selectedUser","UserReducer","initialState","disabled","DeleteConfirmModalModal","constructor","props","handleSubmit","bind","closeModal","resetState","componentDidMount","setState","event","preventDefault","dispatch","id","then","catch","render","modalState","username","connectedDeleteConfirmModalModal"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { deleteUser, setDeleteUserModal } from \"../../actions\"\nimport { Button } from \"../Button\";\nimport \"./styles/Modal.css\"\n\nconst mapStateToProps = state => {\n    return { \n        isVisible: state.ModalReducer.modalDeleteUser,\n        selectedUser: state.UserReducer.selectedUser \n    };\n}\n\nconst initialState = {\n    disabled: false,\n};\n\nclass DeleteConfirmModalModal extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = initialState;\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.resetState = this.resetState.bind(this);\n    }\n\n    componentDidMount(){\n        if (!this.props.isVisible) {\n            this.setState(initialState);\n        }\n    }\n\n    resetState(){\n        this.setState(initialState);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        if (this.state.disabled) {\n            return;\n        }\n        this.setState({...this.state, disabled:true});\n        if (this.props.selectedUser) {\n            this.props.dispatch(deleteUser(this.props.selectedUser.id)).then(()=>{\n                this.closeModal();\n            }).catch(()=>{\n                this.setState({...this.state, disabled:false});\n            })\n            return;\n        }\n        this.setState({...this.state, disabled:false});\n    }\n\n    closeModal(){\n        // this.resetState();\n        // this.props.dispatch(selectUser(-1));\n        this.props.dispatch(setDeleteUserModal(false)).then(this.resetState);\n    }\n\n    render(){\n        var modalState = 'modal ';\n        modalState += this.props.isVisible? 'modal-open':'modal-closed';\n\n        return(\n            <div className={modalState}>\n                <div className='modal-title'>\n                    <Button className='move-right' onClick={this.closeModal}>\n                        X\n                    </Button>\n                </div>\n                \n                <div className=\"modal-content\">\n                    {this.props.selectedUser?`Are you sure you want to delete user ${this.props.selectedUser.username}?`:\"\"}\n                    <br/>\n                    <Button onClick={this.handleSubmit}>\n                        Accept\n                    </Button>\n                </div>\n                \n            </div>\n        )\n    }\n}\n\nconst connectedDeleteConfirmModalModal = connect(mapStateToProps)(DeleteConfirmModalModal);\n\nexport { connectedDeleteConfirmModalModal as DeleteConfirmModalModal };"]},"metadata":{},"sourceType":"module"}