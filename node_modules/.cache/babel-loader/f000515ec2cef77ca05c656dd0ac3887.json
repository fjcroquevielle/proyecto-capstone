{"ast":null,"code":"var _jsxFileName = \"/Users/camilarendic/Desktop/Capstone/Repositorios/2021-2-S3-Grupo3-Web/src/routes/VerifyAccount.js\";\nimport { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { ACCESS_TOKEN, ROUTES } from \"../constants\";\nimport { VerifyAccountForm } from \"../components\";\nimport \"./styles/SignUp.css\";\nimport { connect } from \"react-redux\";\nimport { getUserData } from \"../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.UserReducer.currentUser\n  };\n};\n\nclass VerifyAccount extends Component {\n  componentDidMount() {\n    if (!this.props.currentUser) {\n      // deal with store reset\n      if (localStorage.getItem(ACCESS_TOKEN) === null) {\n        this.goTo(ROUTES.HOME);\n        return;\n      } // get user data\n\n\n      this.props.dispatch(getUserData()).then(() => {\n        if (!this.props.currentUser.verified) {\n          this.goTo(ROUTES.MY_PAGE);\n        }\n      }).catch(error => {\n        localStorage.removeItem(ACCESS_TOKEN);\n        this.goTo(ROUTES.HOME);\n      });\n      return;\n    }\n\n    if (!this.props.currentUser.verified) {\n      this.goTo(ROUTES.MY_PAGE);\n    }\n  }\n\n  goTo(routeName) {\n    if (this.props.location.pathname === routeName) {\n      return;\n    }\n\n    this.props.history.push(routeName);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signin-content\",\n        children: /*#__PURE__*/_jsxDEV(VerifyAccountForm, {\n          onSuccess: () => this.goTo(ROUTES.MY_PAGE)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst VerifyAccountWithRouter = withRouter(VerifyAccount);\n_c = VerifyAccountWithRouter;\nconst ConnectedVerifyAccount = connect(mapStateToProps)(VerifyAccountWithRouter);\nexport { ConnectedVerifyAccount as VerifyAccount };\n\nvar _c;\n\n$RefreshReg$(_c, \"VerifyAccountWithRouter\");","map":{"version":3,"sources":["/Users/camilarendic/Desktop/Capstone/Repositorios/2021-2-S3-Grupo3-Web/src/routes/VerifyAccount.js"],"names":["Component","withRouter","ACCESS_TOKEN","ROUTES","VerifyAccountForm","connect","getUserData","mapStateToProps","state","currentUser","UserReducer","VerifyAccount","componentDidMount","props","localStorage","getItem","goTo","HOME","dispatch","then","verified","MY_PAGE","catch","error","removeItem","routeName","location","pathname","history","push","render","VerifyAccountWithRouter","ConnectedVerifyAccount"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,SAASC,YAAT,EAAuBC,MAAvB,QAAqC,cAArC;AAEA,SAASC,iBAAT,QAAkC,eAAlC;AAEA,OAAO,qBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,YAA5B;;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHC,IAAAA,WAAW,EAAGD,KAAK,CAACE,WAAN,CAAkBD;AAD7B,GAAP;AAGH,CAJD;;AAMA,MAAME,aAAN,SAA4BX,SAA5B,CAAqC;AAEjCY,EAAAA,iBAAiB,GAAG;AAEhB,QAAI,CAAC,KAAKC,KAAL,CAAWJ,WAAhB,EAA6B;AACzB;AACA,UAAIK,YAAY,CAACC,OAAb,CAAqBb,YAArB,MAAuC,IAA3C,EAAiD;AAC7C,aAAKc,IAAL,CAAUb,MAAM,CAACc,IAAjB;AACA;AACH,OALwB,CAMzB;;;AACA,WAAKJ,KAAL,CAAWK,QAAX,CAAoBZ,WAAW,EAA/B,EAAmCa,IAAnC,CAAwC,MAAI;AACxC,YAAI,CAAC,KAAKN,KAAL,CAAWJ,WAAX,CAAuBW,QAA5B,EAAsC;AAClC,eAAKJ,IAAL,CAAUb,MAAM,CAACkB,OAAjB;AACH;AACJ,OAJD,EAIGC,KAJH,CAISC,KAAK,IAAE;AACZT,QAAAA,YAAY,CAACU,UAAb,CAAwBtB,YAAxB;AACA,aAAKc,IAAL,CAAUb,MAAM,CAACc,IAAjB;AACH,OAPD;AAQA;AACH;;AACD,QAAI,CAAC,KAAKJ,KAAL,CAAWJ,WAAX,CAAuBW,QAA5B,EAAsC;AAClC,WAAKJ,IAAL,CAAUb,MAAM,CAACkB,OAAjB;AACH;AACJ;;AAEDL,EAAAA,IAAI,CAACS,SAAD,EAAW;AACX,QAAI,KAAKZ,KAAL,CAAWa,QAAX,CAAoBC,QAApB,KAAiCF,SAArC,EAAgD;AAC5C;AACH;;AACD,SAAKZ,KAAL,CAAWe,OAAX,CAAmBC,IAAnB,CAAwBJ,SAAxB;AACH;;AAEDK,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACG,QAAC,iBAAD;AAAmB,UAAA,SAAS,EAAE,MAAI,KAAKd,IAAL,CAAUb,MAAM,CAACkB,OAAjB;AAAlC;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAzCgC;;AA4CrC,MAAMU,uBAAuB,GAAG9B,UAAU,CAACU,aAAD,CAA1C;KAAMoB,uB;AAEN,MAAMC,sBAAsB,GAAG3B,OAAO,CAACE,eAAD,CAAP,CAAyBwB,uBAAzB,CAA/B;AAEA,SAAQC,sBAAsB,IAAIrB,aAAlC","sourcesContent":["import { Component } from \"react\";\nimport { withRouter } from \"react-router\";\n\nimport { ACCESS_TOKEN, ROUTES } from \"../constants\";\n\nimport { VerifyAccountForm } from \"../components\";\n\nimport \"./styles/SignUp.css\";\nimport { connect } from \"react-redux\";\nimport { getUserData } from \"../actions\";\n\nconst mapStateToProps = state => {\n    return {\n        currentUser : state.UserReducer.currentUser,\n    }\n}\n\nclass VerifyAccount extends Component{\n\n    componentDidMount() {\n        \n        if (!this.props.currentUser) {\n            // deal with store reset\n            if (localStorage.getItem(ACCESS_TOKEN) === null) {\n                this.goTo(ROUTES.HOME);\n                return;\n            } \n            // get user data\n            this.props.dispatch(getUserData()).then(()=>{\n                if (!this.props.currentUser.verified) {\n                    this.goTo(ROUTES.MY_PAGE);\n                }\n            }).catch(error=>{\n                localStorage.removeItem(ACCESS_TOKEN);\n                this.goTo(ROUTES.HOME);\n            });\n            return;\n        }\n        if (!this.props.currentUser.verified) {\n            this.goTo(ROUTES.MY_PAGE);\n        }\n    }\n\n    goTo(routeName){\n        if (this.props.location.pathname === routeName) {\n            return;\n        }\n        this.props.history.push(routeName);\n    }\n\n    render(){\n        return(\n            <div>\n                <div className=\"signin-content\">\n                   <VerifyAccountForm onSuccess={()=>this.goTo(ROUTES.MY_PAGE)}/> \n                </div>\n            </div>\n        )\n    }\n}\n\nconst VerifyAccountWithRouter = withRouter(VerifyAccount);\n\nconst ConnectedVerifyAccount = connect(mapStateToProps)(VerifyAccountWithRouter);\n\nexport {ConnectedVerifyAccount as VerifyAccount};"]},"metadata":{},"sourceType":"module"}