{"ast":null,"code":"var _jsxFileName = \"/Users/camilarendic/Desktop/Capstone/Repositorios/2021-2-S3-Grupo3-Web/src/components/modals/NewProjectModal.js\";\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addProject, setProjectModal } from \"../../actions\";\nimport { Button } from \"../Button\";\nimport { TextField } from \"../TextField\";\nimport \"./styles/Modal.css\";\nimport { IS_INT } from \"../../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    isVisible: state.ModalReducer.modalProject,\n    users: state.UserReducer.users,\n    currentUser: state.UserReducer.currentUser\n  };\n};\n\nconst initialState = {\n  name: '',\n  description: '',\n  MantainerId: '',\n  disabled: false\n};\n\nclass NewProjectModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.resetState = this.resetState.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.props.isVisible) {\n      this.setState(initialState);\n    }\n  }\n\n  handleChange(event) {\n    if (this.state.disabled) {\n      return;\n    }\n\n    var newState = this.state;\n    newState[event.target.name] = event.target.value;\n    this.setState(newState);\n  }\n\n  resetState() {\n    this.setState(initialState);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (this.state.disabled) {\n      return;\n    }\n\n    this.setState({ ...this.state,\n      disabled: true\n    });\n    const projectData = {};\n    const fields = ['name', 'description', 'MantainerId'];\n    fields.forEach(field => {\n      if (this.state[field] !== undefined || this.state[field] !== null || this.state[field] !== '') {\n        projectData[field] = IS_INT.test(this.state[field]) ? parseInt(this.state[field]) : this.state[field];\n      }\n    });\n\n    const onSuccess = () => {\n      this.closeModal();\n    };\n\n    const onFailure = error => {\n      console.error(error.fieldErrors);\n      this.setState({ ...this.state,\n        disabled: false\n      });\n    };\n\n    this.props.dispatch(addProject(projectData)).then(onSuccess).catch(onFailure);\n  }\n\n  closeModal() {\n    this.props.dispatch(setProjectModal(false)).then(this.resetState);\n  }\n\n  render() {\n    var modalState = 'modal ';\n    modalState += this.props.isVisible ? 'modal-open' : 'modal-closed';\n    var mantainerVal = \"\";\n    var mantainerLabel = \"Select 1\";\n\n    if (this.props.placeholder) {\n      var _this$props$users$fin;\n\n      mantainerVal = this.props.placeholder.MantainerId;\n      mantainerLabel = (_this$props$users$fin = this.props.users.find(user => user.id === mantainerVal)) === null || _this$props$users$fin === void 0 ? void 0 : _this$props$users$fin.name;\n    } else if (this.props.currentUser) {\n      mantainerVal = this.props.currentUser.id;\n      mantainerLabel = this.props.currentUser.username;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: modalState,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-title\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.closeModal,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fieldName: \"name\",\n            type: \"text\",\n            value: this.state.name,\n            placeholder: this.props.placeholder ? this.props.placeholder.name : \"\",\n            onChange: this.handleChange,\n            children: \"Project Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fieldName: \"description\",\n            type: \"text\",\n            value: this.state.description,\n            placeholder: this.props.placeholder ? this.props.placeholder.description : \"\",\n            onChange: this.handleChange,\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"MantainerId\",\n            name: \"MantainerId\",\n            value: this.state.MantainerId,\n            onChange: this.handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: mantainerVal,\n              defaultValue: true,\n              disabled: true,\n              hidden: true,\n              children: mantainerLabel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this), this.props.users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: user.id,\n              children: user.username\n            }, user.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Submit\",\n            disabled: this.state.disabled\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst connectedNewProjectModal = connect(mapStateToProps)(NewProjectModal);\nexport { connectedNewProjectModal as NewProjectModal };","map":{"version":3,"sources":["/Users/camilarendic/Desktop/Capstone/Repositorios/2021-2-S3-Grupo3-Web/src/components/modals/NewProjectModal.js"],"names":["Component","connect","addProject","setProjectModal","Button","TextField","IS_INT","mapStateToProps","state","isVisible","ModalReducer","modalProject","users","UserReducer","currentUser","initialState","name","description","MantainerId","disabled","NewProjectModal","constructor","props","handleChange","bind","handleSubmit","closeModal","resetState","componentDidMount","setState","event","newState","target","value","preventDefault","projectData","fields","forEach","field","undefined","test","parseInt","onSuccess","onFailure","error","console","fieldErrors","dispatch","then","catch","render","modalState","mantainerVal","mantainerLabel","placeholder","find","user","id","username","map","connectedNewProjectModal"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addProject, setProjectModal } from \"../../actions\";\nimport { Button } from \"../Button\";\nimport { TextField } from \"../TextField\";\nimport \"./styles/Modal.css\"\nimport { IS_INT } from \"../../constants\";\n\nconst mapStateToProps = state => {\n    return { \n        isVisible: state.ModalReducer.modalProject,\n        users: state.UserReducer.users,\n        currentUser: state.UserReducer.currentUser\n    };\n}\n\nconst initialState =  {\n    name: '',\n    description: '',\n    MantainerId: '',\n    disabled: false,\n};\n\nclass NewProjectModal extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = initialState;\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.resetState = this.resetState.bind(this);\n    }\n\n    componentDidMount(){\n        if (!this.props.isVisible) {\n            this.setState(initialState);\n        }\n    }\n\n    handleChange(event) {\n        if (this.state.disabled) {\n            return;\n        }\n        var newState = this.state;\n        newState[event.target.name] = event.target.value\n        this.setState(newState);\n    }\n\n    resetState(){\n        this.setState(initialState);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        if (this.state.disabled) {\n            return;\n        }\n        this.setState({...this.state, disabled:true});\n        const projectData = {}\n        const fields = ['name', 'description', 'MantainerId']\n        fields.forEach(field=>{\n            if (this.state[field] !== undefined || this.state[field] !== null || this.state[field] !== '') {\n                projectData[field] = IS_INT.test(this.state[field]) ? parseInt(this.state[field]) : this.state[field];\n            }\n        });\n\n        const onSuccess = ()=>{this.closeModal();};\n        const onFailure = (error)=>{\n            console.error(error.fieldErrors);\n            this.setState({...this.state, disabled:false});\n        };\n        this.props.dispatch(addProject(projectData)).then(onSuccess).catch(onFailure);\n    }\n\n    closeModal(){\n        this.props.dispatch(setProjectModal(false)).then(this.resetState);\n    }\n\n    render(){\n        var modalState = 'modal ';\n        modalState += this.props.isVisible? 'modal-open':'modal-closed';\n\n        var mantainerVal = \"\";\n        var mantainerLabel = \"Select 1\";\n        if (this.props.placeholder) {\n            mantainerVal = this.props.placeholder.MantainerId; \n            mantainerLabel = this.props.users.find(user=>user.id===mantainerVal)?.name;\n        }\n        else if (this.props.currentUser) {\n            mantainerVal = this.props.currentUser.id;\n            mantainerLabel = this.props.currentUser.username;\n        }\n\n\n        return(\n            <div className={modalState}>\n                <div className='modal-title'>\n                    <Button onClick={this.closeModal}>\n                        X\n                    </Button>\n                </div>\n                \n                <div className=\"modal-content\">\n                    <form onSubmit={this.handleSubmit}>\n                        <TextField \n                                fieldName=\"name\" \n                                type=\"text\" \n                                value={this.state.name} \n                                placeholder={this.props.placeholder ? this.props.placeholder.name : \"\"} \n                                onChange={this.handleChange}>\n                            Project Name\n                        </TextField>\n                        \n                        <TextField \n                                fieldName=\"description\" \n                                type=\"text\" \n                                value={this.state.description} \n                                placeholder={this.props.placeholder ? this.props.placeholder.description : \"\"} \n                                onChange={this.handleChange}>\n                            Description\n                        </TextField>\n\n                        <select id=\"MantainerId\" name=\"MantainerId\"  value={this.state.MantainerId} onChange={this.handleChange}>\n                            <option value={mantainerVal} defaultValue disabled hidden>\n                                { mantainerLabel }\n                            </option>\n                            {this.props.users.map(user=>(\n                                <option value={user.id} key={user.id}>\n                                    {user.username}\n                                </option>\n                            ))}\n                        </select>\n                        \n                        <br/>\n                        <br/>\n                        <input type=\"submit\" value=\"Submit\" disabled={this.state.disabled}/>\n                    </form> \n                </div>\n            </div>\n        )\n    }\n}\n\nconst connectedNewProjectModal = connect(mapStateToProps)(NewProjectModal);\n\nexport { connectedNewProjectModal as NewProjectModal };"]},"metadata":{},"sourceType":"module"}