{"ast":null,"code":"var _jsxFileName = \"/Users/camilarendic/Desktop/Capstone/Repositorios/2021-2-S3-Grupo3-Web/src/components/modals/UpdateOrganizationModal.js\";\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"../Button\";\nimport \"./styles/Modal.css\";\nimport { TextField } from \"../TextField\";\nimport { setOrganizationModal, updateOrganization } from \"../../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    isVisible: state.ModalReducer.modalOrganization,\n    organization: state.OrganizationReducer.organization\n  };\n};\n\nconst initialState = {\n  orgName: '',\n  payment_info: '',\n  disabled: false\n};\n\nclass UpdateOrganizationModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.resetState = this.resetState.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.props.isVisible) {\n      this.setState(initialState);\n    }\n  }\n\n  handleChange(event) {\n    if (this.state.disabled) {\n      return;\n    }\n\n    var newState = this.state;\n    newState[event.target.name] = event.target.value;\n    this.setState(newState);\n  }\n\n  resetState() {\n    this.setState(initialState);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (this.state.disabled) {\n      return;\n    }\n\n    this.setState({ ...this.state,\n      disabled: true\n    });\n    const userData = {};\n    const fields = [\"orgName\", \"payment_info\"];\n    fields.forEach(field => {\n      if (this.state[field] !== initialState[field]) {\n        userData[field] = this.state[field];\n      }\n    });\n\n    const onSuccess = () => {\n      this.closeModal();\n    };\n\n    const onFailure = () => {\n      this.setState({ ...this.state,\n        disabled: false\n      });\n    }; // send request\n\n\n    this.props.dispatch(updateOrganization(this.props.organization.id, userData)).then(onSuccess).catch(onFailure);\n  }\n\n  closeModal() {\n    // this.resetState();\n    this.props.dispatch(setOrganizationModal(false)).then(this.resetState);\n  }\n\n  render() {\n    var modalState = 'modal ';\n    modalState += this.props.isVisible ? 'modal-open' : 'modal-closed';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: modalState,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-title\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.closeModal,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fieldName: \"orgName\",\n            type: \"text\",\n            value: this.state.orgName,\n            placeholder: this.props.organization ? this.props.organization.name : \"\",\n            onChange: this.handleChange,\n            children: \"Organization Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fieldName: \"payment_info\",\n            type: \"text\",\n            value: this.state.payment_info,\n            onChange: this.handleChange,\n            children: \"Payment Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Submit\",\n            disabled: this.state.disabled\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst connectedUpdateOrganizationModal = connect(mapStateToProps)(UpdateOrganizationModal);\nexport { connectedUpdateOrganizationModal as UpdateOrganizationModal };","map":{"version":3,"sources":["/Users/camilarendic/Desktop/Capstone/Repositorios/2021-2-S3-Grupo3-Web/src/components/modals/UpdateOrganizationModal.js"],"names":["Component","connect","Button","TextField","setOrganizationModal","updateOrganization","mapStateToProps","state","isVisible","ModalReducer","modalOrganization","organization","OrganizationReducer","initialState","orgName","payment_info","disabled","UpdateOrganizationModal","constructor","props","handleChange","bind","handleSubmit","closeModal","resetState","componentDidMount","setState","event","newState","target","name","value","preventDefault","userData","fields","forEach","field","onSuccess","onFailure","dispatch","id","then","catch","render","modalState","connectedUpdateOrganizationModal"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"../Button\";\nimport \"./styles/Modal.css\"\nimport { TextField } from \"../TextField\";\nimport { setOrganizationModal, updateOrganization } from \"../../actions\";\n\nconst mapStateToProps = state => {\n    return { \n        isVisible: state.ModalReducer.modalOrganization,\n        organization: state.OrganizationReducer.organization\n    };\n}\n\nconst initialState =  {\n    orgName: '',\n    payment_info: '',\n    disabled: false,\n};\n\nclass UpdateOrganizationModal extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = initialState;\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.resetState = this.resetState.bind(this);\n    }\n\n    componentDidMount(){\n        if (!this.props.isVisible) {\n            this.setState(initialState);\n        }\n    }\n\n    handleChange(event) {\n        if (this.state.disabled) {\n            return;\n        }\n        var newState = this.state;\n        newState[event.target.name] = event.target.value\n        this.setState(newState);\n    }\n\n    resetState(){\n        this.setState(initialState);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        if (this.state.disabled) {\n            return;\n        }\n        this.setState({...this.state, disabled:true});\n        const userData = {}\n        const fields = [\"orgName\", \"payment_info\"];\n        fields.forEach(field=>{\n            if (this.state[field] !== initialState[field]) {\n                userData[field] = this.state[field];\n            }\n        })\n            \n        const onSuccess = ()=>{this.closeModal();};\n        const onFailure = ()=>{this.setState({...this.state, disabled:false});};\n        // send request\n        this.props.dispatch(updateOrganization(this.props.organization.id, userData)).then(onSuccess).catch(onFailure);\n    }\n\n    closeModal(){\n        // this.resetState();\n        this.props.dispatch(setOrganizationModal(false)).then(this.resetState);\n    }\n\n    render(){\n        var modalState = 'modal ';\n        modalState += this.props.isVisible? 'modal-open':'modal-closed';\n\n        return(\n            <div className={modalState}>\n                <div className='modal-title'>\n                    <Button onClick={this.closeModal}>\n                        X\n                    </Button>\n                </div>\n                \n                <div className=\"modal-content\">\n                    <form onSubmit={this.handleSubmit}>\n                        <TextField \n                                fieldName=\"orgName\" \n                                type=\"text\" \n                                value={this.state.orgName}\n                                placeholder={this.props.organization ? this.props.organization.name : \"\"} \n                                onChange={this.handleChange}>\n                            Organization Name\n                        </TextField>\n                        \n                        <TextField \n                                fieldName=\"payment_info\" \n                                type=\"text\" \n                                value={this.state.payment_info} \n                                onChange={this.handleChange}>\n                            Payment Info\n                        </TextField>\n                        <br/>\n                        <br/>\n                        <input type=\"submit\" value=\"Submit\" disabled={this.state.disabled}/>\n                    </form> \n                </div>\n            </div>\n        )\n    }\n}\n\nconst connectedUpdateOrganizationModal = connect(mapStateToProps)(UpdateOrganizationModal);\n\nexport { connectedUpdateOrganizationModal as UpdateOrganizationModal };"]},"metadata":{},"sourceType":"module"}