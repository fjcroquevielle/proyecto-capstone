{"ast":null,"code":"var _jsxFileName = \"/Users/camilarendic/Desktop/Capstone/Repositorios/2021-2-S3-Grupo3-Web/src/components/UpdateInfoForm.js\";\nimport { Component } from \"react\";\nimport { TextField } from \"./TextField\";\nimport { connect } from \"react-redux\";\nimport { updateSelf } from \"../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    placeholder: state.UserReducer.currentUser\n  };\n};\n\nconst initialState = {\n  username: '',\n  email: '',\n  password: '',\n  passwordConfirmation: '',\n  disabled: false\n};\n\nclass UpdateInfoForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState(initialState);\n  }\n\n  handleChange(event) {\n    if (this.state.disabled) {\n      return;\n    }\n\n    var newState = this.state;\n    newState[event.target.name] = event.target.value;\n    this.setState(newState);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (this.state.disabled) {\n      return;\n    }\n\n    this.setState({ ...this.state,\n      disabled: true\n    }); // handle validation\n\n    const userData = {};\n    Object.keys(this.state).forEach(key => {\n      if (this.state[key] !== initialState[key]) {\n        userData[key] = this.state[key];\n      }\n    }); // send request\n\n    this.props.dispatch(updateSelf(userData)).then(() => {\n      this.setState(initialState);\n      this.props.onSuccess();\n    }).catch(error => {\n      console.log(error);\n      this.setState({ ...this.state,\n        disabled: false\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Update User Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fieldName: \"username\",\n          type: \"text\",\n          value: this.state.username,\n          placeholder: this.props.placeholder ? this.props.placeholder.username : \"\",\n          onChange: this.handleChange,\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fieldName: \"email\",\n          type: \"text\",\n          value: this.state.email,\n          placeholder: this.props.placeholder ? this.props.placeholder.email : \"\",\n          onChange: this.handleChange,\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fieldName: \"password\",\n          type: \"password\",\n          value: this.state.password,\n          onChange: this.handleChange,\n          children: \"New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fieldName: \"passwordConfirmation\",\n          type: \"password\",\n          value: this.state.passwordConfirmation,\n          onChange: this.handleChange,\n          children: \"Password Confirmation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\",\n          disabled: this.state.disabled\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst connectedUpdateInfoForm = connect(mapStateToProps)(UpdateInfoForm);\nexport { connectedUpdateInfoForm as UpdateInfoForm };","map":{"version":3,"sources":["/Users/camilarendic/Desktop/Capstone/Repositorios/2021-2-S3-Grupo3-Web/src/components/UpdateInfoForm.js"],"names":["Component","TextField","connect","updateSelf","mapStateToProps","state","placeholder","UserReducer","currentUser","initialState","username","email","password","passwordConfirmation","disabled","UpdateInfoForm","constructor","props","handleChange","bind","handleSubmit","componentDidMount","setState","event","newState","target","name","value","preventDefault","userData","Object","keys","forEach","key","dispatch","then","onSuccess","catch","error","console","log","render","connectedUpdateInfoForm"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,YAA3B;;;AAGA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAM;AACFC,IAAAA,WAAW,EAAED,KAAK,CAACE,WAAN,CAAkBC;AAD7B,GAAN;AAGH,CAJD;;AAMA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,QAAQ,EAAE,EAHO;AAIjBC,EAAAA,oBAAoB,EAAE,EAJL;AAKjBC,EAAAA,QAAQ,EAAE;AALO,CAArB;;AAQA,MAAMC,cAAN,SAA6Bf,SAA7B,CAAsC;AAElCgB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKZ,KAAL,GAAaI,YAAb;AAEA,SAAKS,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDE,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,QAAL,CAAcb,YAAd;AACH;;AAEDS,EAAAA,YAAY,CAACK,KAAD,EAAQ;AAChB,QAAI,KAAKlB,KAAL,CAAWS,QAAf,EAAyB;AACrB;AACH;;AACD,QAAIU,QAAQ,GAAG,KAAKnB,KAApB;AACAmB,IAAAA,QAAQ,CAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,CAAR,GAA8BH,KAAK,CAACE,MAAN,CAAaE,KAA3C;AAEA,SAAKL,QAAL,CAAcE,QAAd;AACH;;AAEDJ,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAChBA,IAAAA,KAAK,CAACK,cAAN;;AACA,QAAI,KAAKvB,KAAL,CAAWS,QAAf,EAAyB;AACrB;AACH;;AACD,SAAKQ,QAAL,CAAc,EAAC,GAAG,KAAKjB,KAAT;AAAgBS,MAAAA,QAAQ,EAAE;AAA1B,KAAd,EALgB,CAMhB;;AACA,UAAMe,QAAQ,GAAG,EAAjB;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAY,KAAK1B,KAAjB,EAAwB2B,OAAxB,CAAgCC,GAAG,IAAE;AACjC,UAAI,KAAK5B,KAAL,CAAW4B,GAAX,MAAoBxB,YAAY,CAACwB,GAAD,CAApC,EAA2C;AACvCJ,QAAAA,QAAQ,CAACI,GAAD,CAAR,GAAgB,KAAK5B,KAAL,CAAW4B,GAAX,CAAhB;AACH;AACJ,KAJD,EARgB,CAahB;;AACA,SAAKhB,KAAL,CAAWiB,QAAX,CAAoB/B,UAAU,CAAC0B,QAAD,CAA9B,EAA0CM,IAA1C,CAA+C,MAAI;AAC/C,WAAKb,QAAL,CAAcb,YAAd;AACA,WAAKQ,KAAL,CAAWmB,SAAX;AACH,KAHD,EAGGC,KAHH,CAGSC,KAAK,IAAE;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAKhB,QAAL,CAAc,EAAC,GAAG,KAAKjB,KAAT;AAAgBS,QAAAA,QAAQ,EAAE;AAA1B,OAAd;AACH,KAND;AAOH;;AAGD2B,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAM,QAAA,QAAQ,EAAE,KAAKrB,YAArB;AAAA,gCAEI,QAAC,SAAD;AACQ,UAAA,SAAS,EAAC,UADlB;AAEQ,UAAA,IAAI,EAAC,MAFb;AAGQ,UAAA,KAAK,EAAE,KAAKf,KAAL,CAAWK,QAH1B;AAIQ,UAAA,WAAW,EAAE,KAAKO,KAAL,CAAWX,WAAX,GAAyB,KAAKW,KAAL,CAAWX,WAAX,CAAuBI,QAAhD,GAA2D,EAJhF;AAKQ,UAAA,QAAQ,EAAE,KAAKQ,YALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAWI,QAAC,SAAD;AACQ,UAAA,SAAS,EAAC,OADlB;AAEQ,UAAA,IAAI,EAAC,MAFb;AAGQ,UAAA,KAAK,EAAE,KAAKb,KAAL,CAAWM,KAH1B;AAIQ,UAAA,WAAW,EAAE,KAAKM,KAAL,CAAWX,WAAX,GAAyB,KAAKW,KAAL,CAAWX,WAAX,CAAuBK,KAAhD,GAAwD,EAJ7E;AAKQ,UAAA,QAAQ,EAAE,KAAKO,YALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAoBI,QAAC,SAAD;AAAW,UAAA,SAAS,EAAC,UAArB;AAAgC,UAAA,IAAI,EAAC,UAArC;AAAgD,UAAA,KAAK,EAAE,KAAKb,KAAL,CAAWO,QAAlE;AAA4E,UAAA,QAAQ,EAAE,KAAKM,YAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBJ,eAwBI,QAAC,SAAD;AAAW,UAAA,SAAS,EAAC,sBAArB;AAA4C,UAAA,IAAI,EAAC,UAAjD;AAA4D,UAAA,KAAK,EAAE,KAAKb,KAAL,CAAWQ,oBAA9E;AAAoG,UAAA,QAAQ,EAAE,KAAKK,YAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBJ,eA4BI;AAAA;AAAA;AAAA;AAAA,gBA5BJ,eA+BI;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAC,QAA3B;AAAoC,UAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWS;AAAzD;AAAA;AAAA;AAAA;AAAA,gBA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAyCH;;AA1FiC;;AA6FtC,MAAM4B,uBAAuB,GAAGxC,OAAO,CAACE,eAAD,CAAP,CAAyBW,cAAzB,CAAhC;AAEA,SAAQ2B,uBAAuB,IAAI3B,cAAnC","sourcesContent":["import { Component } from \"react\";\nimport { TextField } from \"./TextField\";\n\nimport { connect } from \"react-redux\";\nimport { updateSelf } from \"../actions\";\n\n\nconst mapStateToProps = state => {\n    return{\n        placeholder: state.UserReducer.currentUser \n    }\n}\n\nconst initialState = {\n    username: '',\n    email: '',\n    password: '',\n    passwordConfirmation: '',\n    disabled: false,\n};\n\nclass UpdateInfoForm extends Component{\n    \n    constructor(props) {\n        super(props);\n        this.state = initialState;\n    \n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState(initialState);\n    }\n\n    handleChange(event) {\n        if (this.state.disabled) {\n            return;\n        }\n        var newState = this.state;\n        newState[event.target.name] = event.target.value\n\n        this.setState(newState);\n    }\n    \n    handleSubmit(event) {\n        event.preventDefault();\n        if (this.state.disabled) {\n            return;\n        }\n        this.setState({...this.state, disabled: true});\n        // handle validation\n        const userData = {}\n        Object.keys(this.state).forEach(key=>{\n            if (this.state[key] !== initialState[key]) {\n                userData[key] = this.state[key];\n            }\n        })\n        // send request\n        this.props.dispatch(updateSelf(userData)).then(()=>{\n            this.setState(initialState);\n            this.props.onSuccess();\n        }).catch(error=>{\n            console.log(error);\n            this.setState({...this.state, disabled: false});\n        })\n    }\n\n\n    render() {\n        return(\n            <div>\n                <h2>\n                    Update User Information\n                </h2>\n\n                <form onSubmit={this.handleSubmit}>\n                    \n                    <TextField \n                            fieldName=\"username\" \n                            type=\"text\" \n                            value={this.state.username} \n                            placeholder={this.props.placeholder ? this.props.placeholder.username : \"\"}\n                            onChange={this.handleChange}>\n                        Username\n                    </TextField>\n                    \n                    <TextField \n                            fieldName=\"email\" \n                            type=\"text\" \n                            value={this.state.email} \n                            placeholder={this.props.placeholder ? this.props.placeholder.email : \"\"}\n                            onChange={this.handleChange}>\n                        Email\n                    </TextField>\n                    \n                    <TextField fieldName=\"password\" type=\"password\" value={this.state.password} onChange={this.handleChange}>\n                        New Password\n                    </TextField>\n                    \n                    <TextField fieldName=\"passwordConfirmation\" type=\"password\" value={this.state.passwordConfirmation} onChange={this.handleChange}>\n                        Password Confirmation\n                    </TextField>\n                    \n                    <br/>\n                    \n\n                    <input type=\"submit\" value=\"Submit\" disabled={this.state.disabled}/>\n                </form> \n            </div>\n        );\n    }\n}\n\nconst connectedUpdateInfoForm = connect(mapStateToProps)(UpdateInfoForm);\n\nexport {connectedUpdateInfoForm as UpdateInfoForm};"]},"metadata":{},"sourceType":"module"}