{"ast":null,"code":"var _jsxFileName = \"/Users/camilarendic/Desktop/Capstone/Repositorios/2021-2-S3-Grupo3-Web/src/components/ProjectList.js\";\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { Header, SidePanel } from \".\";\nimport { closeAll, getProjects, getProjectsAssigned, getUsers, selectProject, setProjectModal } from \"../actions/\";\nimport { PARAMS, ROUTES, USER_TYPE } from \"../constants\";\nimport { Button } from \"./Button\";\nimport { ListItem } from \"./ListItem\";\nimport { NewProjectModal } from \"./modals\";\nimport \"./styles/List.css\";\nimport icono_proyectos from \"./Icons/svg/icono_proyectos.svg\";\nimport icono_lupa from \"./Icons/icono_lupa.svg\";\nimport icono_consulta from \"./Icons/icono_consulta.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.UserReducer.currentUser,\n    projects: state.ProjectReducer.projects,\n    users: state.UserReducer.indexedUsers\n  };\n};\n\nclass ProjectList extends Component {\n  constructor(props) {\n    super(props);\n    this.renderContent = this.renderContent.bind(this);\n    this.SetProjectList = this.SetProjectList.bind(this);\n    this.openModal = this.openModal.bind(this);\n    this.renderOpenModalButton = this.renderOpenModalButton.bind(this);\n  }\n\n  componentDidMount() {\n    this.SetProjectList();\n  }\n\n  SetProjectList() {\n    if (this.props.targetUser) {\n      this.props.dispatch(getProjectsAssigned(this.props.targetUser.id));\n      return;\n    }\n\n    this.props.dispatch(getProjects());\n\n    if (Object.keys(this.props.users).length === 0) {\n      this.props.dispatch(getUsers());\n    }\n  }\n\n  openModal() {\n    this.props.dispatch(setProjectModal(true));\n  }\n\n  goToProject(projectIndex) {\n    this.props.dispatch(selectProject(projectIndex)).then(() => {\n      this.props.history.push(ROUTES.PROJECT_PAGE.replace(PARAMS.PROJECT_ID, this.props.projects[projectIndex].id));\n      this.props.dispatch(closeAll(true));\n    });\n  }\n\n  renderContent() {\n    var {\n      users\n    } = this.props;\n    {\n      /* var {  proyects, users } = this.props; */\n    }\n    let projects = [{\n      name: \"Pedro\",\n      MantainerId: 2,\n      createdAt: new Date().toString(),\n      description: \"Proyecto 1\"\n    }, {\n      name: \"Pedro\",\n      MantainerId: 4,\n      createdAt: new Date().toString(),\n      description: \"Proyecto 1\"\n    }, {\n      name: \"Pedro\",\n      MantainerId: 4,\n      createdAt: new Date().toString(),\n      description: \"Proyecto 1\"\n    }, {\n      name: \"Pedro\",\n      MantainerId: 7,\n      createdAt: new Date().toString(),\n      description: \"Proyecto 1\"\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"view-projects-list\",\n        children: [/*#__PURE__*/_jsxDEV(SidePanel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"view-projects-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"link_home\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"Inicio-Proyectos\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"\",\n                children: \"Inicio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 53\n              }, this), \" /Proyectos\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: this.props.targetUser ? `Projects Assigned to ${this.props.targetUser.username}` : \"Projects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"left-line\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: icono_proyectos,\n                alt: \"\",\n                class: \"projects-logo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"span_1\",\n              children: \"100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"left-line\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"Rectangle\",\n                children: \"+ Agregar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this), projects && projects.length > 0 && projects.map((project, index) => {\n            var _users$project$Mantai;\n\n            return /*#__PURE__*/_jsxDEV(ListItem, {\n              className: \"project\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"project-data\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"project-name\",\n                  children: project.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"project-context\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \" Created At: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 41\n                    }, this), \" \", project.createdAt]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 37\n                  }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \" Admin:  \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 41\n                    }, this), \" \", (_users$project$Mantai = users[project.MantainerId]) === null || _users$project$Mantai === void 0 ? void 0 : _users$project$Mantai.username]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"project-description\",\n                  children: project.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"move-right\",\n                onClick: () => {\n                  this.goToProject(index);\n                },\n                children: \"\\u25B6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 29\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 25\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this);\n  }\n\n  renderOpenModalButton() {\n    // prevent the current user from opening this modal if the circunstances don't allow it\n    if (!this.props.currentUser || this.props.currentUser.orgUser.type !== USER_TYPE.ADMIN || this.props.targetUser) {\n      return;\n    }\n\n    return /*#__PURE__*/_jsxDEV(Button, {\n      className: \"list-button move-right\",\n      onClick: this.openModal,\n      children: \"+ Add Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), this.renderOpenModalButton(), this.renderContent(), /*#__PURE__*/_jsxDEV(NewProjectModal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst ConnectedProjectList = connect(mapStateToProps)(ProjectList);\nconst ProjectListWithRouter = withRouter(ConnectedProjectList);\n_c = ProjectListWithRouter;\nexport { ProjectListWithRouter as ProjectList };\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectListWithRouter\");","map":{"version":3,"sources":["/Users/camilarendic/Desktop/Capstone/Repositorios/2021-2-S3-Grupo3-Web/src/components/ProjectList.js"],"names":["Component","connect","withRouter","Header","SidePanel","closeAll","getProjects","getProjectsAssigned","getUsers","selectProject","setProjectModal","PARAMS","ROUTES","USER_TYPE","Button","ListItem","NewProjectModal","mapStateToProps","state","currentUser","UserReducer","projects","ProjectReducer","users","indexedUsers","ProjectList","constructor","props","renderContent","bind","SetProjectList","openModal","renderOpenModalButton","componentDidMount","targetUser","dispatch","id","Object","keys","length","goToProject","projectIndex","then","history","push","PROJECT_PAGE","replace","PROJECT_ID","name","MantainerId","createdAt","Date","toString","description","username","icono_proyectos","map","project","index","orgUser","type","ADMIN","render","ConnectedProjectList","ProjectListWithRouter"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { Header, SidePanel } from \".\";\nimport { closeAll, getProjects, getProjectsAssigned, getUsers, selectProject, setProjectModal } from \"../actions/\";\nimport { PARAMS, ROUTES, USER_TYPE } from \"../constants\";\nimport { Button } from \"./Button\";\nimport { ListItem } from \"./ListItem\";\nimport { NewProjectModal } from \"./modals\";\nimport \"./styles/List.css\";\nimport icono_proyectos from './Icons/svg/icono_proyectos.svg';\nimport icono_lupa from './Icons/icono_lupa.svg';\nimport icono_consulta from './Icons/icono_consulta.svg';\n\nconst mapStateToProps = state => {\n    return { \n        currentUser: state.UserReducer.currentUser, \n        projects: state.ProjectReducer.projects,\n        users: state.UserReducer.indexedUsers\n    };\n};\n  \n\nclass ProjectList extends Component{\n\n    constructor(props) {\n        super(props);\n        \n        this.renderContent = this.renderContent.bind(this);\n        this.SetProjectList = this.SetProjectList.bind(this);\n        this.openModal = this.openModal.bind(this);\n        this.renderOpenModalButton = this.renderOpenModalButton.bind(this);\n    }\n    \n    componentDidMount() {\n        this.SetProjectList()\n    }\n    \n    SetProjectList() {\n        if (this.props.targetUser) {\n            this.props.dispatch(getProjectsAssigned(this.props.targetUser.id));\n            return;\n        }\n        this.props.dispatch(getProjects());\n        if (Object.keys(this.props.users).length === 0) {\n            this.props.dispatch(getUsers());\n        }\n    }\n\n    openModal() {\n        this.props.dispatch(setProjectModal(true));\n    }\n\n    goToProject(projectIndex) {\n        this.props.dispatch(selectProject(projectIndex)).then(()=>{\n            this.props.history.push(ROUTES.PROJECT_PAGE.replace(PARAMS.PROJECT_ID, this.props.projects[projectIndex].id));\n            this.props.dispatch(closeAll(true));\n        });\n    }\n\n    renderContent() {\n        var {  users } = this.props; {/* var {  proyects, users } = this.props; */}\n        let projects = [\n            {\n                name: \"Pedro\",\n                MantainerId: 2,\n                createdAt: new Date().toString(),\n                description: \"Proyecto 1\"\n            },\n            {\n                name: \"Pedro\",\n                MantainerId: 4,\n                createdAt: new Date().toString(),\n                description: \"Proyecto 1\"\n            },\n            {\n                name: \"Pedro\",\n                MantainerId: 4,\n                createdAt: new Date().toString(),\n                description: \"Proyecto 1\"\n            },\n            {\n                name: \"Pedro\",\n                MantainerId: 7,\n                createdAt: new Date().toString(),\n                description: \"Proyecto 1\"\n            }\n\n        ]\n        return(\n            <div className=\"list-content\">\n                <div id=\"view-projects-list\">\n                <SidePanel/>\n                <div id=\"view-projects-row\">\n                <div id=\"link_home\">\n                   <p className=\"Inicio-Proyectos\"> <a href=\"\" >Inicio</a> /Proyectos</p> \n                </div>\n                    <div className=\"list-header\">\n                        <h3>\n                            {this.props.targetUser? `Projects Assigned to ${this.props.targetUser.username}`: \"Projects\"}\n                        </h3>\n                        <span className='left-line'>\n                                <img src={icono_proyectos} alt=\"\" class='projects-logo'></img>\n                        </span>\n                        <span id=\"span_1\">\n                            100\n                        </span>\n                        <span className='left-line'>\n                            <button className=\"Rectangle\">+ Agregar</button>\n                        </span>\n                    </div>\n                {\n                    projects &&\n                    projects.length > 0 &&\n                    projects.map((project, index) => (\n                        <ListItem key={index} className='project' >\n                            <div className='project-data'>\n                                <div className='project-name'>\n                                    {project.name}\n                                </div>\n                                <div className='project-context'>\n                                    <span>\n                                        <b> Created At: </b> {project.createdAt}{/* ?.split('T')[0] */} \n                                    </span>\n                                    &nbsp;\n                                    <span>\n                                        <b> Admin:  </b> {users[project.MantainerId]?.username}\n                                    </span>\n                                </div>\n                                <div className='project-description'>\n                                    {project.description}\n\n                                </div>\n\n                            </div>\n                            <Button className='move-right' onClick={()=>{this.goToProject(index)}}>\n                                ▶\n                            </Button>\n                        </ListItem>\n                        )\n                    )\n                }\n                </div>\n                </div>\n            </div>\n        )\n    }\n\n    renderOpenModalButton() {\n        // prevent the current user from opening this modal if the circunstances don't allow it\n        if (!this.props.currentUser || this.props.currentUser.orgUser.type !== USER_TYPE.ADMIN || this.props.targetUser) {\n            return;\n        }\n        return(\n            <Button className='list-button move-right' onClick={this.openModal}>\n                + Add Project\n            </Button>\n        )\n    }\n    \n    render(){\n        return(\n            <div className='list-container'>\n                <Header></Header>\n                    \n                {this.renderOpenModalButton()}\n                {this.renderContent()}\n                <NewProjectModal/>\n            </div>\n        )\n    }\n}\n\nconst ConnectedProjectList = connect(mapStateToProps)(ProjectList);\n\nconst ProjectListWithRouter = withRouter(ConnectedProjectList);\n\nexport {ProjectListWithRouter as ProjectList};"]},"metadata":{},"sourceType":"module"}