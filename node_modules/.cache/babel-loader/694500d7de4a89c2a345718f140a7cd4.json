{"ast":null,"code":"var _jsxFileName = \"/Users/camilarendic/Desktop/Capstone/Repositorios/2021-2-S3-Grupo3-Web/src/components/modals/NewUserModal.js\";\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"../Button\";\nimport { addUser, setUserModal, updateUser } from \"../../actions\";\nimport { TextField } from \"../TextField\";\nimport { IS_INT, USER_TYPE } from \"../../constants\";\nimport \"./styles/Modal.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    isVisible: state.ModalReducer.modalUser,\n    placeholder: state.UserReducer.selectedUser\n  };\n};\n\nconst initialState = {\n  username: '',\n  email: '',\n  company: '',\n  userType: '',\n  disabled: false\n};\n\nclass NewUserModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.resetState = this.resetState.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.props.isVisible) {\n      this.setState(initialState);\n    }\n  }\n\n  handleChange(event) {\n    if (this.state.disabled) {\n      return;\n    }\n\n    var newState = this.state;\n    newState[event.target.name] = event.target.value;\n    this.setState(newState);\n  }\n\n  resetState() {\n    this.setState(initialState);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (this.state.disabled) {\n      return;\n    }\n\n    this.setState({ ...this.state,\n      disabled: true\n    });\n    const userData = {};\n    const fields = ['username', 'email', 'company'];\n    fields.forEach(field => {\n      if (this.state[field] !== undefined || this.state[field] !== null || this.state[field] !== '') {\n        userData[field] = IS_INT.test(this.state[field]) ? parseInt(this.state[field]) : this.state[field];\n      }\n    });\n\n    const onSuccess = () => {\n      this.closeModal();\n    };\n\n    const onFailure = () => {\n      this.setState({ ...this.state,\n        disabled: false\n      });\n    }; // send request\n\n\n    if (this.props.placeholder) {\n      // this.setState({...this.state, disabled:false});\n      userData.alias = userData.username;\n      this.props.dispatch(updateUser(this.props.placeholder.id, userData)).then(onSuccess).catch(onFailure);\n      return;\n    }\n\n    this.props.dispatch(addUser(userData, this.state.userType === `${USER_TYPE.MAINTAINER}`)).then(onSuccess).catch(onFailure);\n  }\n\n  closeModal() {\n    // this.resetState();\n    this.props.dispatch(setUserModal(false)).then(this.resetState);\n  }\n\n  render() {\n    var modalState = 'modal ';\n    modalState += this.props.isVisible ? 'modal-open' : 'modal-closed';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: modalState,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-title\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"move-right\",\n          onClick: this.closeModal,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fieldName: \"username\",\n            type: \"text\",\n            value: this.state.username,\n            placeholder: this.props.placeholder ? this.props.placeholder.alias : \"\",\n            onChange: this.handleChange,\n            children: \"User Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fieldName: \"email\",\n            type: \"text\",\n            value: this.state.email,\n            placeholder: this.props.placeholder ? this.props.placeholder.User.email : \"\",\n            onChange: this.handleChange,\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fieldName: \"company\",\n            type: \"text\",\n            value: this.state.company,\n            placeholder: this.props.placeholder ? this.props.placeholder.company : \"\",\n            onChange: this.handleChange,\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            hrmlfor: \"userType\",\n            children: \"User Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"userType\",\n            name: \"userType\",\n            value: this.state.userType,\n            onChange: this.handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              defaultValue: true,\n              disabled: true,\n              hidden: true,\n              children: this.props.placeholder ? USER_TYPE[this.props.placeholder.type] : 'Select one'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"2\",\n              children: USER_TYPE[2]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"3\",\n              children: USER_TYPE[3]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Submit\",\n            disabled: this.state.disabled\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst connectedNewUserModal = connect(mapStateToProps)(NewUserModal);\nexport { connectedNewUserModal as NewUserModal };","map":{"version":3,"sources":["/Users/camilarendic/Desktop/Capstone/Repositorios/2021-2-S3-Grupo3-Web/src/components/modals/NewUserModal.js"],"names":["Component","connect","Button","addUser","setUserModal","updateUser","TextField","IS_INT","USER_TYPE","mapStateToProps","state","isVisible","ModalReducer","modalUser","placeholder","UserReducer","selectedUser","initialState","username","email","company","userType","disabled","NewUserModal","constructor","props","handleChange","bind","handleSubmit","closeModal","resetState","componentDidMount","setState","event","newState","target","name","value","preventDefault","userData","fields","forEach","field","undefined","test","parseInt","onSuccess","onFailure","alias","dispatch","id","then","catch","MAINTAINER","render","modalState","User","type","connectedNewUserModal"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"../Button\";\nimport { addUser, setUserModal, updateUser } from \"../../actions\"\nimport { TextField } from \"../TextField\";\nimport { IS_INT, USER_TYPE } from \"../../constants\";\n\nimport \"./styles/Modal.css\"\n\nconst mapStateToProps = state => {\n    return { \n        isVisible: state.ModalReducer.modalUser,\n        placeholder: state.UserReducer.selectedUser \n    };\n}\n\nconst initialState =  {\n    username: '',\n    email: '',\n    company: '',\n    userType: '',\n    disabled: false,\n};\n\nclass NewUserModal extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = initialState;\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.resetState = this.resetState.bind(this);\n    }\n\n    componentDidMount(){\n        if (!this.props.isVisible) {\n            this.setState(initialState);\n        }\n    }\n\n    handleChange(event) {\n        if (this.state.disabled) {\n            return;\n        }\n        var newState = this.state;\n        newState[event.target.name] = event.target.value\n        this.setState(newState);\n    }\n\n    resetState(){\n        this.setState(initialState);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        if (this.state.disabled) {\n            return;\n        }\n        this.setState({...this.state, disabled:true});\n\n        const userData = {}\n        const fields = ['username', 'email', 'company']\n        fields.forEach(field=>{\n            if (this.state[field] !== undefined || this.state[field] !== null || this.state[field] !== '') {\n                userData[field] = IS_INT.test(this.state[field]) ? parseInt(this.state[field]) : this.state[field];\n            }\n        })\n\n        const onSuccess = ()=>{this.closeModal();};\n        const onFailure = ()=>{this.setState({...this.state, disabled:false});};\n        // send request\n        if (this.props.placeholder) {\n            // this.setState({...this.state, disabled:false});\n            userData.alias = userData.username;\n            this.props.dispatch(updateUser(this.props.placeholder.id, userData)).then(onSuccess).catch(onFailure);\n            return;\n        }\n\n        this.props.dispatch(addUser(userData, this.state.userType === `${USER_TYPE.MAINTAINER}`)).then(onSuccess).catch(onFailure);\n    }\n\n    closeModal(){\n        // this.resetState();\n        this.props.dispatch(setUserModal(false)).then(this.resetState);\n    }\n\n    render(){\n        var modalState = 'modal ';\n        modalState += this.props.isVisible? 'modal-open':'modal-closed';\n\n        return(\n            <div className={modalState}>\n                <div className='modal-title'>\n                    <Button className='move-right' onClick={this.closeModal}>\n                        X\n                    </Button>\n                </div>\n                \n                <div className=\"modal-content\">\n                    <form onSubmit={this.handleSubmit}>\n                        <TextField \n                                fieldName=\"username\" \n                                type=\"text\" \n                                value={this.state.username} \n                                placeholder={this.props.placeholder ? this.props.placeholder.alias : \"\"} \n                                onChange={this.handleChange}>\n                            User Name\n                        </TextField>\n                        \n                        <TextField \n                                fieldName=\"email\" \n                                type=\"text\" \n                                value={this.state.email} \n                                placeholder={this.props.placeholder ? this.props.placeholder.User.email : \"\"} \n                                onChange={this.handleChange}>\n                            Email\n                        </TextField>\n                        \n                        <TextField \n                                fieldName=\"company\" \n                                type=\"text\" \n                                value={this.state.company} \n                                placeholder={this.props.placeholder ? this.props.placeholder.company : \"\"} \n                                onChange={this.handleChange}>\n                            Role\n                        </TextField>\n                        \n                        <label hrmlfor=\"userType\">\n                            User Type\n                        </label>\n                        <br/>\n                        <select id=\"userType\" name=\"userType\"  value={this.state.userType} onChange={this.handleChange}>\n                            <option value=\"\" defaultValue disabled hidden>\n                                {this.props.placeholder ? USER_TYPE[ this.props.placeholder.type] : 'Select one'}\n                            </option>\n                            <option value=\"2\">\n                                {USER_TYPE[2]}\n                            </option>\n                            <option value=\"3\">\n                                {USER_TYPE[3]}\n                            </option>\n                        </select>\n                        \n                        \n                        <br/>\n                        <br/>\n                        <input type=\"submit\" value=\"Submit\" disabled={this.state.disabled}/>\n                    </form> \n                </div>\n            </div>\n        )\n    }\n}\n\nconst connectedNewUserModal = connect(mapStateToProps)(NewUserModal);\n\nexport { connectedNewUserModal as NewUserModal };"]},"metadata":{},"sourceType":"module"}